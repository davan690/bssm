% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict.mcmc_output}
\alias{predict.mcmc_output}
\title{Predictions for Gaussian State Space Models}
\usage{
\method{predict}{mcmc_output}(object, future_model, type = "response",
  intervals = TRUE, probs = c(0.05, 0.95), return_MCSE = TRUE,
  seed = sample(.Machine$integer.max, size = 1), ...)
}
\arguments{
\item{object}{Model object.}

\item{probs}{Desired quantiles. Defaults to \code{c(0.05, 0.95)}. Always includes median 0.5.}

\item{return_MCSE}{For method \code{"parametric"}, if \code{TRUE}, the Monte Carlo
standard errors are also returned.}

\item{...}{Ignored.}

\item{priors}{Priors for the unknown parameters.}

\item{n_ahead}{Number of steps ahead at which to predict.}

\item{interval}{Compute predictions on \code{"mean"} ("confidence interval") or
\code{"response"} ("prediction interval"). Defaults to \code{"response"}.}

\item{newdata}{Matrix containing the covariate values for the future time
points. Defaults to zero matrix of appropriate size.}

\item{method}{Either \code{"parametric"} (default) or \code{"quantile"}.
Only used for linear-Gaussian case.}

\item{nsim_states}{Number of samples used in importance sampling.}

\item{newu}{Vector of length \code{n_ahead} defining the future values of \eqn{u}.
Defaults to 1.}
}
\value{
List containing the mean predictions, quantiles and Monte Carlo
standard errors .
}
\description{
Posterior intervals of future observations or their means
(success probabilities in binomial case) for Gaussian models. These are
computed using either the quantile method where the intervals are computed
as empirical quantiles the posterior sample, or parametric method by
Helske (2016).
}
\examples{
require("graphics")
y <- log10(JohnsonJohnson)
prior <- uniform(0.01, 0, 1)
model <- bsm(window(y, end = c(1974, 4)), sd_y = prior, sd_level = prior,
  sd_slope = prior, sd_seasonal = prior)

mcmc_results <- run_mcmc(model, n_iter = 5000)
future_model <- model
future_model$y <- ts(rep(NA, 25), start = end(model$y), 
  frequency = frequency(model$y))
pred_gaussian <- predict(mcmc_results, future_model, 
  probs = c(0.05, 0.1, 0.5, 0.9, 0.95))
ts.plot(log10(JohnsonJohnson), pred_gaussian$intervals, 
  col = c(1, rep(2, 5)), lty = c(1, 2, 2, 1, 2, 2))

head(pred_gaussian$intervals)
head(pred_gaussian$MCSE)

# Non-gaussian models

data("poisson_series")

model <- ng_bsm(poisson_series, sd_level = halfnormal(0.1, 1),
  sd_slope=halfnormal(0.01, 0.1), distribution = "poisson")
mcmc_poisson <- run_mcmc(model, n_iter = 5000, nsim = 10)

future_model <- model
future_model$y <- ts(rep(NA, 25), start = end(model$y), 
  frequency = frequency(model$y))

pred <- predict(mcmc_poisson, future_model, 
  probs = seq(0.05,0.95, by = 0.05))

library("ggplot2")
fit <- ts(colMeans(exp(expand_sample(mcmc_poisson, "alpha")$level)))
autoplot(pred, y = model$y, fit = fit)
}

