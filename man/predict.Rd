% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bsm.R, R/gssm.R
\name{predict.bsm}
\alias{predict.bsm}
\alias{predict.gssm}
\title{Predictions for Gaussian State Space Models}
\usage{
\method{predict}{bsm}(object, n_iter, lower_prior, upper_prior,
  newdata = NULL, n_ahead = 1, interval = "response", probs = c(0.05,
  0.95), method = "quantile", return_MCSE = TRUE, nsim_states = 1,
  n_burnin = floor(n_iter/2), n_thin = 1, gamma = 2/3,
  target_acceptance = 0.234, S, seed = sample(.Machine$integer.max, size =
  1), log_space = FALSE, ...)

\method{predict}{gssm}(object, n_iter, lower_prior, upper_prior,
  newdata = NULL, n_ahead = 1, interval = "response", probs = c(0.05,
  0.95), method = "quantile", return_MCSE = TRUE, nsim_states = 1,
  n_burnin = floor(n_iter/2), n_thin = 1, gamma = 2/3,
  target_acceptance = 0.234, S, Z_est, H_est, T_est, R_est,
  seed = sample(.Machine$integer.max, size = 1), ...)
}
\arguments{
\item{object}{Model object.}

\item{n_iter}{Number of MCMC iterations.}

\item{lower_prior}{Bounds of the uniform prior for parameters
\eqn{\theta}. Optional for \code{bsm} objects.}

\item{upper_prior}{Bounds of the uniform prior for parameters
\eqn{\theta}. Optional for \code{bsm} objects.}

\item{newdata}{Matrix containing the covariate values for the future time
points. Defaults to zero matrix of appropriate size.}

\item{n_ahead}{Number of steps ahead at which to predict.}

\item{interval}{Compute predictions on \code{"mean"} ("confidence interval") or
\code{"response"} ("prediction interval"). Defaults to \code{"response"}.}

\item{probs}{Desired quantiles. Defaults to \code{c(0.05, 0.95)}. Always includes median 0.5.}

\item{method}{Either \code{"parametric"} (default) or \code{"quantile"}.
Only used in Gaussian case.}

\item{return_MCSE}{For method \code{"parametric"}, if \code{TRUE}, the Monte Carlo
standard errors are also returned.}

\item{nsim_states}{Number of simulations of states per MCMC iteration. Only
used when \code{type = "full"}.}

\item{n_burnin}{Length of the burn-in period which is disregarded from the
results. Defaults to \code{n_iter / 2}.}

\item{n_thin}{Thinning rate. Defaults to 1. Increase for large models in
order to save memory.}

\item{gamma}{Tuning parameter for the adaptation of RAM algorithm. Must be
between 0 and 1 (not checked).}

\item{target_acceptance}{Target acceptance ratio for RAM. Defaults to 0.234.}

\item{S}{Initial value for the lower triangular matrix of RAM
algorithm, so that the covariance matrix of the Gaussian proposal
distribution is \eqn{SS'}.}

\item{seed}{Seed for the random number generator.}

\item{log_space}{Generate proposals for standard deviations in log-space. Default is \code{FALSE}.}

\item{...}{Ignored.}

\item{Z_est}{Arrays or matrices containing \code{NA}
values marking the unknown parameters which are to be estimated. Must be of
same dimension as the corresponding elements of the model object.}

\item{H_est}{Arrays or matrices containing \code{NA}
values marking the unknown parameters which are to be estimated. Must be of
same dimension as the corresponding elements of the model object.}

\item{T_est}{Arrays or matrices containing \code{NA}
values marking the unknown parameters which are to be estimated. Must be of
same dimension as the corresponding elements of the model object.}

\item{R_est}{Arrays or matrices containing \code{NA}
values marking the unknown parameters which are to be estimated. Must be of
same dimension as the corresponding elements of the model object.}
}
\value{
List containing the mean predictions, quantiles and Monte Carlo
standard errors .
}
\description{
Posterior intervals of future observations or their means
for Gaussian models. These are
computed using either the quantile method where the intervals are computed
as empirical quantiles the posterior sample, or parametric method by
Helske (2016).
}
\examples{
require("graphics")
y <- log10(JohnsonJohnson)
init_sd <- 0.1
model <- bsm(y, sd_y = init_sd, sd_level = init_sd,
  sd_slope = init_sd, sd_seasonal = init_sd)

pred1 <- predict(model, n_iter = 5000, n_ahead = 8)
pred2 <- predict(StructTS(y, type = "BSM"), n.ahead = 8)

ts.plot(pred1$mean, pred1$intervals[,-2], pred2$pred +
cbind(0, -qnorm(0.95) * pred2$se, qnorm(0.95) * pred2$se),
  col = c(1, 1, 1, 2, 2, 2))

}

